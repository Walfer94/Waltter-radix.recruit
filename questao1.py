#!/usr/bin/env python
# coding: utf-8

# In[149]:


a = [
    [11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    [10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8],
    [8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7],
    [7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6],
    [6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5],
    [5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4],
    [4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3],
    [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2],
    [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    ]


# In[150]:


b = [
    [11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    [10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8],
    [8, 9, 10, 11, 12, 2, 1, 78, 3, 4, 5, 6, 7],
    [7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6],
    [6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5],
    [5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4],
    [4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3],
    [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2],
    [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
]


# In[151]:


c = [
    [5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4],
    [6, 7, 8, 9, 10, 11, 12, 78,1, 2, 3, 4, 5],
    [7, 8, 9, 10, 11, 12, 78,1, 2, 3, 4, 5, 6],
    [8, 9, 10, 11, 12, 78,1, 2, 3, 4, 5, 6, 7],
    [9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8],
    [10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    [12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
    [78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1],
    [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2]
    ]


# In[176]:


d = [
    [11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    [10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8],
    [8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7],
    [7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6],
    [6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5],
    [5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4],
    [4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3],
    [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2],
    [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78, 1],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
    [12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
    [11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    [10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8, 9],
    [9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7, 8],
    [8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6, 7],
    [7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5, 6],
    [6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4, 5],
    [5, 6, 7, 8, 9, 10, 11, 12, 78, 1, 2, 3, 4],
]


# In[186]:


e = [
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 78]
    ]


# In[197]:


def encontre_escadinha(matriz_inicial):

    matriz_nova = matriz_inicial.copy()
    lista_maximos = []
    
    for index, linha in enumerate(matriz_nova):
        
        index_maximo_linha = linha.index(sum(linha)/2)
        lista_maximos.append(index_maximo_linha)
                                     
        matriz_nova[index] = np.roll(linha, ( len(linha) - index_maximo_linha -1 )).tolist()

        
    escadinha = True
    padrao = all(x == lista_maximos[0] for x in lista_maximos)

    for index in range(len(lista_maximos)-1):
        
        if escadinha == False:
            break
        
        if lista_maximos[index] == len(linha)-1:
            escadinha = ((lista_maximos[index] - lista_maximos[index+1]) == len(linha)-1)
        else:
            escadinha = ((lista_maximos[index] - lista_maximos[index+1]) == -1)

    if escadinha:
        print('A matriz é uma escadinha', end = ' ')
    else:
        print('A matriz não é uma escadinha', end = ' ')
        if padrao:
            print('e é padrão utilizável.')
        else:
            print('e não é padrão utilizável.')
            return
    return matriz_nova

encontre_escadinha(a)

